version: "3.8"

services:
  postgresdb:
    image: postgres
    restart: always
    container_name: postgres
    env_file: ./.env
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    ports:
      - $DB_LOCAL_PORT:$DB_DOCKER_PORT
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./app/src/main/resources/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d books_inventory_db -U admin"]
      interval: 10s
      timeout: 30s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
  service-app:
    depends_on:
      postgresdb:
        condition: service_healthy
    restart: on-failure
    image: bookstore-ims
    build: .
    env_file: ./.env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
      - $DEBUG_PORT:$DEBUG_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.r2dbc.url" : "r2dbc:postgresql://postgres:$DB_DOCKER_PORT/$POSTGRES_DB?serverTimezone=UTC",
        "spring.r2dbc.username" : "$POSTGRES_USER",
        "spring.r2dbc.password" : "$POSTGRES_PASSWORD"}'
volumes:
  db-data: